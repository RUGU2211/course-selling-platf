spring.application.name=course-management
server.port=8083

# Config Server URL using Docker container name
spring.config.import=optional:configserver:http://course-selling-platf-config-server-1:8888

# Eureka Discovery using Docker Eureka container name
eureka.client.service-url.defaultZone=http://course-selling-platf-eureka-server-1:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Database Configuration - MySQL in Docker Compose with container name and port
spring.datasource.url=jdbc:mysql://course-selling-platf-mysql-1:3307/courses_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC

spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# JWT Configuration
jwt.secret=change_this_to_secure_long_random_string_base64
jwt.expiration=86400000

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,env,metrics,loggers,beans
management.endpoint.health.show-details=always

# Logging
logging.level.org.springframework=INFO
logging.level.com.coursemanagement=DEBUG
