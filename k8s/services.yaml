apiVersion: apps/v1
kind: Deployment
metadata:
  name: eureka-server
  namespace: course-plat
spec:
  replicas: 1
  selector: { matchLabels: { app: eureka-server } }
  template:
    metadata: { labels: { app: eureka-server } }
    spec:
      containers:
      - name: eureka-server
        image: DOCKERHUB_USER/course-plat-eureka-server:IMAGE_TAG
        ports: [{ containerPort: 8761 }]
---
apiVersion: v1
kind: Service
metadata:
  name: eureka-server
  namespace: course-plat
spec:
  selector: { app: eureka-server }
  ports:
    - port: 8761
      targetPort: 8761
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-server
  namespace: course-plat
spec:
  replicas: 1
  selector: { matchLabels: { app: config-server } }
  template:
    metadata: { labels: { app: config-server } }
    spec:
      containers:
      - name: config-server
        image: DOCKERHUB_USER/course-plat-config-server:IMAGE_TAG
        ports: [{ containerPort: 8888 }]
---
apiVersion: v1
kind: Service
metadata:
  name: config-server
  namespace: course-plat
spec:
  selector: { app: config-server }
  ports:
    - port: 8888
      targetPort: 8888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: course-plat
spec:
  replicas: 1
  selector: { matchLabels: { app: user-service } }
  template:
    metadata: { labels: { app: user-service } }
    spec:
      containers:
      - name: user-service
        image: DOCKERHUB_USER/course-plat-user-service:IMAGE_TAG
        ports: [{ containerPort: 8082 }]
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: course-plat
spec:
  selector: { app: user-service }
  ports:
    - port: 8082
      targetPort: 8082
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: course-service
  namespace: course-plat
spec:
  replicas: 1
  selector: { matchLabels: { app: course-service } }
  template:
    metadata: { labels: { app: course-service } }
    spec:
      containers:
      - name: course-service
        image: DOCKERHUB_USER/course-plat-course-service:IMAGE_TAG
        ports: [{ containerPort: 8083 }]
---
apiVersion: v1
kind: Service
metadata:
  name: course-service
  namespace: course-plat
spec:
  selector: { app: course-service }
  ports:
    - port: 8083
      targetPort: 8083
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enrollment-service
  namespace: course-plat
spec:
  replicas: 1
  selector: { matchLabels: { app: enrollment-service } }
  template:
    metadata: { labels: { app: enrollment-service } }
    spec:
      containers:
      - name: enrollment-service
        image: DOCKERHUB_USER/course-plat-enrollment-service:IMAGE_TAG
        ports: [{ containerPort: 8084 }]
---
apiVersion: v1
kind: Service
metadata:
  name: enrollment-service
  namespace: course-plat
spec:
  selector: { app: enrollment-service }
  ports:
    - port: 8084
      targetPort: 8084
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  namespace: course-plat
spec:
  replicas: 1
  selector: { matchLabels: { app: payment-service } }
  template:
    metadata: { labels: { app: payment-service } }
    spec:
      containers:
      - name: payment-service
        image: DOCKERHUB_USER/course-plat-payment-service:IMAGE_TAG
        ports: [{ containerPort: 8086 }]
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  namespace: course-plat
spec:
  selector: { app: payment-service }
  ports:
    - port: 8086
      targetPort: 8086
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: course-plat
spec:
  replicas: 1
  selector: { matchLabels: { app: notification-service } }
  template:
    metadata: { labels: { app: notification-service } }
    spec:
      containers:
      - name: notification-service
        image: DOCKERHUB_USER/course-plat-notification-service:IMAGE_TAG
        ports: [{ containerPort: 8085 }]
---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: course-plat
spec:
  selector: { app: notification-service }
  ports:
    - port: 8085
      targetPort: 8085
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: content-service
  namespace: course-plat
spec:
  replicas: 1
  selector: { matchLabels: { app: content-service } }
  template:
    metadata: { labels: { app: content-service } }
    spec:
      containers:
      - name: content-service
        image: DOCKERHUB_USER/course-plat-content-service:IMAGE_TAG
        ports: [{ containerPort: 8087 }]
---
apiVersion: v1
kind: Service
metadata:
  name: content-service
  namespace: course-plat
spec:
  selector: { app: content-service }
  ports:
    - port: 8087
      targetPort: 8087
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: course-plat
spec:
  replicas: 1
  selector: { matchLabels: { app: frontend } }
  template:
    metadata: { labels: { app: frontend } }
    spec:
      containers:
      - name: frontend
        image: DOCKERHUB_USER/course-plat-frontend:IMAGE_TAG
        ports: [{ containerPort: 80 }]
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: course-plat
spec:
  type: NodePort
  selector: { app: frontend }
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080
