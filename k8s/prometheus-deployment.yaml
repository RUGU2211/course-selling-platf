apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: course-platform
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'eureka-server'
        static_configs:
          - targets: ['eureka-service:8761']
        metrics_path: '/actuator/prometheus'

      - job_name: 'config-server'
        static_configs:
          - targets: ['config-server-service:8888']
        metrics_path: '/actuator/prometheus'

      - job_name: 'api-gateway'
        static_configs:
          - targets: ['api-gateway-service:8765']
        metrics_path: '/actuator/prometheus'

      - job_name: 'user-service'
        static_configs:
          - targets: ['user-service:8082']
        metrics_path: '/user-service/actuator/prometheus'

      - job_name: 'course-service'
        static_configs:
          - targets: ['course-service:8083']
        metrics_path: '/course-service/actuator/prometheus'

      - job_name: 'enrollment-service'
        static_configs:
          - targets: ['enrollment-service:8084']
        metrics_path: '/enrollment-service/actuator/prometheus'

      - job_name: 'notification-service'
        static_configs:
          - targets: ['notification-service:8085']
        metrics_path: '/notification-service/actuator/prometheus'

      - job_name: 'payment-service'
        static_configs:
          - targets: ['payment-service:8086']
        metrics_path: '/payment-service/actuator/prometheus'

      - job_name: 'content-service'
        static_configs:
          - targets: ['content-service:8087']
        metrics_path: '/content-service/actuator/prometheus'
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: course-platform
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: course-platform
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=200h'
          - '--web.enable-lifecycle'
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/prometheus/
        - name: prometheus-storage-volume
          mountPath: /prometheus/
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 5
      volumes:
      - name: prometheus-config-volume
        configMap:
          defaultMode: 420
          name: prometheus-config
      - name: prometheus-storage-volume
        persistentVolumeClaim:
          claimName: prometheus-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: course-platform
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP