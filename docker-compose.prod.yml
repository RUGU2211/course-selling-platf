# Production Docker Compose File - Course Selling Platform
# This file includes ALL services: MySQL, Eureka, Config, Microservices, API Gateway, Frontend, and Jenkins
# Uses production images from Docker Hub: rugved2211/course-selling-platf

version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: course-platform-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: course_platform
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD:-root}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Service Discovery
  eureka-server:
    image: rugved2211/course-selling-platf:eureka-server
    container_name: course-platform-eureka
    ports:
      - "8761:8761"
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # Configuration Server
  config-server:
    image: rugved2211/course-selling-platf:config-server
    container_name: course-platform-config
    ports:
      - "8888:8888"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # User Management Service
  user-service:
    image: rugved2211/course-selling-platf:user-service
    container_name: course-platform-user-service
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://course-platform-mysql:3306/users_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://course-platform-eureka:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    restart: unless-stopped

  # Course Management Service
  course-service:
    image: rugved2211/course-selling-platf:course-service
    container_name: course-platform-course-service
    ports:
      - "8083:8083"
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://course-platform-mysql:3306/courses_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://course-platform-eureka:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    restart: unless-stopped

  # Enrollment Service
  enrollment-service:
    image: rugved2211/course-selling-platf:enrollment-service
    container_name: course-platform-enrollment-service
    ports:
      - "8084:8084"
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://course-platform-mysql:3306/enrollment_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://course-platform-eureka:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    restart: unless-stopped

  # Notification Service
  notification-service:
    image: rugved2211/course-selling-platf:notification-service
    container_name: course-platform-notification-service
    ports:
      - "8085:8085"
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://course-platform-mysql:3306/notification_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://course-platform-eureka:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    restart: unless-stopped

  # Payment Service
  payment-service:
    image: rugved2211/course-selling-platf:payment-service
    container_name: course-platform-payment-service
    ports:
      - "8086:8086"
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://course-platform-mysql:3306/payment_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://course-platform-eureka:8761/eureka/
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    restart: unless-stopped

  # Content Delivery Service
  content-service:
    image: rugved2211/course-selling-platf:content-service
    container_name: course-platform-content-service
    ports:
      - "8087:8087"
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://course-platform-mysql:3306/content_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://course-platform-eureka:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    restart: unless-stopped

  # API Gateway
  api-gateway:
    image: rugved2211/course-selling-platf:api-gateway
    container_name: course-platform-api-gateway
    ports:
      - "8765:8765"
    depends_on:
      user-service:
        condition: service_healthy
      course-service:
        condition: service_healthy
      enrollment-service:
        condition: service_healthy
      notification-service:
        condition: service_healthy
      payment-service:
        condition: service_healthy
      content-service:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://course-platform-eureka:8761/eureka/
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED=true
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWER_CASE_SERVICE_ID=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    restart: unless-stopped

  # Frontend Application
  frontend:
    image: rugved2211/course-selling-platf:frontend
    container_name: course-platform-frontend
    ports:
      - "3000:80"
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - VITE_API_URL=http://localhost:8765
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Jenkins CI/CD Server (Optional - for production deployment)
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins-ci
    privileged: true
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      user-service:
        condition: service_healthy
      course-service:
        condition: service_healthy
      enrollment-service:
        condition: service_healthy
      notification-service:
        condition: service_healthy
      payment-service:
        condition: service_healthy
      content-service:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      frontend:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/login"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    restart: unless-stopped

volumes:
  mysql-data:
  jenkins_home:

networks:
  microservices-network:
    driver: bridge

